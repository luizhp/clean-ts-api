https://www.udemy.com/course/tdd-com-mango


Seção 1: Introdução

01 - Source Code:
     https://github.com/rmanguinho/clean-ts-api

02 - Apresentação do Projeto
     
03 - Configurando o git:
     01-02-git.txt

04 - Configurando as dependências:
     dependencias.txt

05 - Clean Architecture
     clean-architecture-diagram-signup.png
     https://www.udemy.com/course/tdd-com-mango/learn/lecture/17664692
     https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html

Seção 2: Bônus

06 - Dicas extras
     dependencias.txt

07 - Problema identificado em biblioteca

Seção 3: SignUp API - Presentation Layer

08 - Criando o SignUpController e validando o request
     02-notes.txt
     clean-architecture-diagram-signup.pdf

09 - Criando erros personalizados
     02-notes.txt

10 - Utilizando Mocks da maneira correta
     02-notes.txt

11 - Testando exceções e integrando com o EmailValidator

12 - Integrando com o AddAccount Usecase


Seção 4: Jest

13 - Configurando o Jest e criando scripts de test
     03-notes.txt


Seção 5: Utils Layer

14 - Criando o EmailValidatorAdapter e mockando o validator
     dependencias.txt


Seção 6: SignUp API - Data Layer

15 - Criando o DbAddAccount e Integrando com o Encrypter

16 - Integrando com o AddAccountRepository


Seção 7: SignUp API - Infra Layer

17 - Criando o BcryptAdapter e mockando o bcrypt
     dependencias.txt

18 - Configurando MongoDb em memória
     dependencias.txt
     01-02-git.txt (sobre git stash)

19 - Testando o MongoDb


Seção 8: SignUp API - Main Layer

20 - Testando middlewares do express
     dependencias.txt

21 - Criando teste de integração para o SignUp
     dependencias.txt

22 - Fazendo a composição do SignUp e desacoplando do express


Seção 9: Bônus

23 - Testando a conexão com o MongoDb

24 - Aplicando o Design Pattern Decorator

25 - Adicionando Log de Erro

26 - Refatorando os testes

27 - Persistindo Log de Erro no MongoDb

28 - Criando Tag e fazendo Push para o GitHub


Seção 10: Login API - Presentation Layer

29 - Criando o LoginController e validando o request

30 - Testando a integração do LoginController com o Authentication Usecase

31 - Aplicando o Design Pattern Composite 1/3

32 - Aplicando o Design Pattern Composite 2/3

33 - Aplicando o Design Pattern Composite 3/3

34 - Refatorando o código


Seção 11: Login API - Data Layer

35 - Criando o DbAuthentication e integrando com o LoadAccountByEmailRepository

36 - Integrando o DbAuthentication com mais 3 dependências


Seção 12: Bônus

37 - Segurança


Seção 13: Login API - Infra Layer

38 - Incluindo o HashComparer ao BcryptAdapter

39 - Criando o JwtAdapter e mockando o jsonwebtoken
     dependencias.txt

40 - Incluindo mais duas interfaces no AccountMongoRepository

Seção 14: Login API - Main Layer

41 - Refatorando o projeto

42 - Fazendo a composição do Login
     todo: 04-middlewares.txt
     01-02-git.txt

Seção 15: Bônus

43 - Subindo a API para o Heroku
     dependencias.txt

44 - Gerando uma imagem da API com Docker
     dependencias.txt

45 - Organizando as imagens e containers com Docker Compose
     dependencias.txt

46 - Debugando API com breakpoint
     05-debug.txt

47 - Usando Nodemon no Docker com Typescript
     dependencias.txt
     06-nodemon.txt

48 - Adicionando documentação com casos de uso
     07-notes.txt

Seção 16: SignUp API - Ajustes

49 - Alterando o SignUp para retornar um token de acesso

50 - Impedindo a criação de contas com Email existente

51 - Refatorando a arquitetura

Seção 17: AddSurvey API

52 - Criando o AddSurveyController

53 - Criando o SurveyMongoRepository

54 - Criando o SurveyMongoRepository

55 - Criando a composição do AddSurvey

Seção 18: Criando Middleware de Autenticação
     08-merge-middleware.txt

56 - Criando o AuthMiddleware e fazendo os primeiros testes

57 - Finalizando os testes do AuthMiddleware

58 - Criando o DbLoadAccountByToken

59 - Implementando a interface Decrypter no JwtAdapter

60 - Implementando a interface LoadAccountByToken no AccountMongoRepository

61 - Aplicando o AuthMiddleware na rota de criar enquete

Seção 19: Bônus

62 - Continuous Integration & Continuous Delivery
     dependencias.txt

Seção 20: LoadSurveys API

63 - Criando o LoadSurveysController
     dependencias.txt
     01-02-git.txt
     09-notes-loadsurveys-01-presentation-steps.txt

64 - Criando o DbLoadSurveys UseCase
     09-notes-loadsurveys-02-data-steps.txt

65 - Incluindo o LoadSurveysRepository ao SurveyMongoRepository
     09-notes-loadsurveys-03-infra-steps.txt

66 - Criando a composição do LoadSurveys
     09-notes-loadsurveys-04-main-steps.txt
     09-notes-loadsurveys-05-merge.txt

Seção 21: Bônus

67 - Modularizando os paths dos imports
     dependencias.txt
     10-merge-import-paths

68 - Utilizando Type Alias
     01-02-git.txt (como consertou falta de git merge antes de fazer criação de nova tag)
     11-notes.txt

69 - Usando Utility Types do Typescript
     12-notes-omit-type-utility.txt

Seção 22: SaveSurveyResult API

70 - Criando os Models e UseCases

71 - Criando o DbLoadSurveyById UseCase

72 - Criando o DbSaveSurveyResult UseCase

73 - Incluindo o LoadSurveyByIdRepository ao SurveyResultMongoRepository

74 - Incluindo o SaveSurveyResultRepository ao SurveyResultMongoRepository

75 - Refactor - Organizando pastas

76 - Criando o SaveSurveyResult Controller 1/2

77 - Criando o SaveSurveyResult Controller 2/2

78 - Fazendo a composição do SaveSurveyResult
     13-merge-feat-add-survey-result.txt

Seção 23: Refactor

79 - Padronizando nomenclaturas
     14-notes-test-refactor.txt

80 - Reutilizando a criação de mocks
     14-notes-test-refactor.txt

81 - Finalizando o refactor dos tests
     14-notes-test-refactor.txt
     15-merge-refactor-tests.txt

82 - Último ajuste do refactor

83 - Refatorando as Promises
     16-notes-find-replace.txt

Seção 24: Bônus - Swagger

84 - Integrando a nossa API com o Swagger
     dependencias.txt
     17-notes-swagger.txt

85 - Criando docs para a API de Login
     17-notes-swagger.txt

86 - Criando componentes reutilizáveis
     17-notes-swagger.txt

87 - Criando doc para a API de Listar Enquetes com Autenticação
     17-notes-swagger.txt

88 - Criando docs para a API de SignUp
     17-notes-swagger.txt

89 - Criando docs para a API de Criar Enquete
     17-notes-swagger.txt

90 - Criando docs para a API de Responder Enquete
     17-notes-swagger.txt
     18-merge-feat-swagger.txt

Seção 25: LoadsurveyResult API

91 - Alterando o retorno do SurveyResult
     19-notes-feat-load-surey-result-pendente.txt
     ./images/19/**

92 - Usando aggregation para retornar o resultado da enquete
     20-notes.aggregation.txt
     ./images/20-notes.aggregation.png

93 - Aplicando o Design Pattern Builder

94 - Correção no Aggregation do resultado da enquete
     20-notes.aggregation.txt
     todo.txt

95 - Criando o LoadSurveyResult UseCase

96 - Incluindo o LoadSurveyResultRepository ao SurveyResultMongoRepository

-----------------
URLs:
  https://git-scm.com/docs/pretty-formats
  https://www.conventionalcommits.org
  https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-commit-message-guidelines
  https://www.npmjs.com/package/git-commit-msg-linter
  https://node.green/
  https://standardjs.com/
  https://github.com/standard/eslint-config-standard-with-typescript
  https://www.npmjs.com/package/eslint-config-standard-with-typescript
  https://eslint.org/
  https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint
  https://www.npmjs.com/package/husky
  https://www.npmjs.com/package/lint-staged
  https://www.npmjs.com/package/jest
  https://jestjs.io/
  https://jestjs.io/docs/en/cli.html
  https://www.npmjs.com/package/validator
  https://www.npmjs.com/package/bcrypt
  https://www.npmjs.com/package/@shelf/jest-mongodb
  https://www.npmjs.com/package/mongodb
  https://www.npmjs.com/package/express
  https://www.npmjs.com/package/sucrase
  https://www.npmjs.com/package/supertest
  https://www.npmjs.com/package/fast-glob
  https://git-scm.com/book/en/v2/Git-Basics-Tagging
  https://www.npmjs.com/package/jsonwebtoken
  https://www.npmjs.com/package/rimraf
  https://www.heroku.com
  https://hub.docker.com/_/node
  https://hub.docker.com/_/mongo
  https://vscode-docs.readthedocs.io/en/stable/editor/debugging/
  https://www.npmjs.com/package/nodemon
  https://travis-ci.org/
  https://coveralls.io/
  https://www.npmjs.com/package/mockdate
  https://www.npmjs.com/package/module-alias
  https://marketplace.visualstudio.com/items?itemName=natqe.reload
  https://www.npmjs.com/package/npm-check
  https://swagger.io/docs/specification/basic-structure/
  https://github.com/helmetjs/nocache
  https://swagger.io/docs/
  https://swagger.io/docs/specification/data-models/data-types/#numbers


  Badges:
    https://snyk.io/
    https://flat.badgen.net/
    [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)
    [![GPLv3 License](https://img.shields.io/badge/License-GPL%20v3-yellow.svg)](https://opensource.org/licenses/)
    [![Open Source](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)](https://opensource.org/)
    https://dependabot.com/
